{"version":3,"sources":["components/sidebar/Navigation.tsx","components/sidebar/Logo.tsx","components/sidebar/Sidebar.tsx","hooks/http.hook.js","components/places/Place.tsx","components/lib/Loading.tsx","components/lib/Button.tsx","components/places/PlacesForm.tsx","components/places/Places.tsx","components/places/PlaceDetails.tsx","components/app/App.tsx","index.js"],"names":["Navigation","props","nav","className","map","item","index","key","to","link","name","defaultProps","icon","Logo","Sidebar","useHttp","useState","loading","setLoading","error","setError","request","useCallback","url","a","method","body","headers","JSON","stringify","fetch","response","json","data","ok","Error","message","clearError","Place","place","deletePlaceFromBd","isLoading","setIsLoading","weather","setWeather","fetchWeather","useEffect","Fragment","_id","title","country","city","tags","tag","description","Loading","value","this","React","Component","Button","onClick","type","text","PlacesForm","form","setForm","tagRef","useRef","setTags","createPlace","handleChange","event","target","console","log","showForm","onChange","ref","current","prev","Places","places","setPlaces","isShowForm","setIsShowForm","useRouteMatch","parametrs","useLocation","search","fetchPlaces","deletePlace","e","id","preventDefault","filter","dataPlace","document","classList","toggle","length","PlaceDetails","setPlace","placeId","useParams","getPlaceDetails","then","res","src","img","alt","App","pages","page","exact","path","router","content","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.70e800f9.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport const Navigation = (props: NavigationProps) => {\r\n    const { nav } = props;\r\n    return (\r\n        <nav className=\"nav\">\r\n            <ul className=\"nav__list\">\r\n                {nav.map((item, index) => (\r\n                    <li key={index} className=\"nav__item\">\r\n                        <Link className=\"nav__link\" to={`/${item.link}`}>\r\n                            <div className=\"nav__link-icon\"></div>\r\n                            <span className=\"nav__link-txt\">{item.name}</span>\r\n                        </Link>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </nav>\r\n    );\r\n};\r\n\r\ntype Navigation = {\r\n    name: string;\r\n    icon: string;\r\n    link: string;\r\n};\r\n\r\ntype NavigationProps = {\r\n    nav: Navigation[];\r\n};\r\n\r\nNavigation.defaultProps = {\r\n    nav: [\r\n        {\r\n            name: \"главная\",\r\n            icon: \"main\",\r\n            link: \"\",\r\n        },\r\n        {\r\n            name: \"список мест\",\r\n            icon: \"places\",\r\n            link: \"places\",\r\n        },\r\n    ],\r\n};\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport const Logo = (props: LogoProps) => {\r\n    return (\r\n        <Link className=\"logo\" to=\"/\">\r\n            Logo\r\n        </Link>\r\n    );\r\n};\r\n\r\ntype LogoProps = {};\r\n","import React from \"react\";\r\nimport { Navigation } from \"./Navigation\";\r\nimport { Logo } from \"./Logo\";\r\n\r\nexport const Sidebar = (props: SidebarProps) => {\r\n    return (\r\n        <div className=\"sidebar\">\r\n            <div className=\"sidebar__inner\">\r\n                <Logo />\r\n                <Navigation />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\ntype SidebarProps = {};\r\n","import { useState, useCallback } from \"react\";\r\n\r\nexport const useHttp = () => {\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(null);\r\n\r\n    const request = useCallback(async (url, method = \"GET\", body = null, headers = {}) => {\r\n        setLoading(true);\r\n\r\n        try {\r\n            if (body) {\r\n                body = JSON.stringify(body);\r\n                headers[\"Content-Type\"] = \"application/json\";\r\n            }\r\n\r\n            const response = await fetch(url, { method, body, headers });\r\n            const data = await response.json();\r\n\r\n            if (!response.ok) {\r\n                throw new Error(data.message || \"ошибка\");\r\n            }\r\n\r\n            return data;\r\n        } catch (error) {\r\n            setLoading(false);\r\n            setError(error.message);\r\n            throw error;\r\n        }\r\n\r\n        setLoading(false);\r\n    }, []);\r\n\r\n    const clearError = () => setError(null);\r\n\r\n    return { loading, request, error, clearError };\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { PlaceType } from \"../../types/places\";\r\nimport { useHttp } from \"../../hooks/http.hook\";\r\n\r\nexport const Place = (props: PlaceProps) => {\r\n    const { url, place, deletePlaceFromBd } = props;\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [weather, setWeather] = useState();\r\n    const { loading, error, request } = useHttp();\r\n\r\n    const deletePlace = (e: any, id: string) => {\r\n        deletePlaceFromBd(e, id);\r\n    };\r\n\r\n    const fetchWeather = async () => {\r\n        const data = await request(`/api/weather`);\r\n        setWeather(data);\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (!isLoading) {\r\n            setIsLoading(true);\r\n            fetchWeather();\r\n        }\r\n    }, [isLoading, weather]);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Link className=\"card place\" to={`${url}/${place._id}`}>\r\n                <div className=\"place__header\">\r\n                    <div className=\"place__title\">\r\n                        <div className=\"place__temp\">{weather}</div>\r\n\r\n                        <div className=\"place__title-inner\">\r\n                            <span>{place.title}</span>\r\n                            <p>\r\n                                {place.country || \"country\"} -- {place.city || \"city\"}\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                {/* <div className=\"place__delete\" onClick={(e) => deletePlace(e, place._id)}></div> */}\r\n\r\n                <div className=\"place__tags\">\r\n                    {place.tags?.map((tag, index) => (\r\n                        <span className=\"place__tags-item\" key={index}>\r\n                            {tag}\r\n                        </span>\r\n                    ))}\r\n                </div>\r\n\r\n                <div className=\"place__content\">\r\n                    <div className=\"place__inner\">\r\n                        <div className=\"place__data\">\r\n                            {place.description && (\r\n                                <div className=\"place__description\">\r\n                                    <p>{place.description}</p>\r\n                                </div>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                {/* <div className=\"place__img\">{place.img ? <img src={place.img.preview} alt={place.img.alt} /> : null}</div> */}\r\n                {/* {place.description && <div className=\"place__description\">{place.description}</div>} */}\r\n            </Link>\r\n        </React.Fragment>\r\n    );\r\n};\r\n\r\ntype PlaceProps = {\r\n    place: PlaceType;\r\n    url: string;\r\n    deletePlaceFromBd: any;\r\n};\r\n","import React from \"react\";\r\n\r\nexport class Loading extends React.Component<LoadingProps> {\r\n    render() {\r\n        const { value } = this.props;\r\n        return (\r\n            <div className=\"loading\">\r\n                <span className=\"loading__value\">Loading {value}...</span>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\ntype LoadingProps = {\r\n    value: String;\r\n};\r\n","import React, { useState } from \"react\";\r\n\r\nexport const Button = (props: ButtonProps) => {\r\n    return (\r\n        <button className=\"btn\" onClick={props.onClick} type={props.type || \"text\"}>\r\n            {props.text}\r\n        </button>\r\n    );\r\n};\r\n\r\ntype ButtonProps = {\r\n    onClick: any;\r\n    type?: any;\r\n    text: string;\r\n};\r\n","import React, { useState, useRef, ReactNode, useEffect } from \"react\";\r\nimport { Button } from \"../lib/Button\";\r\n\r\nexport const PlacesForm = (props: PlacesForm) => {\r\n    const [form, setForm] = useState({});\r\n    const tagRef = useRef<HTMLInputElement>(null);\r\n    const [tags, setTags] = useState<string[]>([]);\r\n\r\n    const createPlace = async () => {\r\n        props.createPlace(form, tags);\r\n    };\r\n\r\n    const handleChange = (event: any) => {\r\n        setForm({ ...form, [event.target.name]: event.target.value });\r\n    };\r\n\r\n    const addTag = () => {\r\n        if (tagRef.current?.value) {\r\n            const tag = tagRef.current.value;\r\n            setTags((prev) => [...prev, tag]);\r\n            tagRef.current.value = \"\";\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        console.log(tags);\r\n    }, [tags]);\r\n\r\n    return (\r\n        <div className=\"modal\">\r\n            <div className=\"modal__inner\">\r\n                <div className=\"modal__header\">\r\n                    <h2 className=\"modal__title\">Добавить карточку</h2>\r\n                    <div className=\"modal__close\" onClick={props.showForm}></div>\r\n                </div>\r\n\r\n                <div className=\"modal__content\">\r\n                    <div className=\"form\">\r\n                        <div className=\"form__content\">\r\n                            <div className=\"form__part\">\r\n                                <div className=\"form__row\">\r\n                                    <label className=\"form__label\">\r\n                                        <span className=\"form__label-title\">title</span>\r\n                                        <input className=\"form__input\" type=\"text\" name=\"title\" onChange={handleChange} />\r\n                                    </label>\r\n\r\n                                    <label className=\"form__label\">\r\n                                        <span className=\"form__label-title\">country</span>\r\n                                        <input className=\"form__input\" type=\"text\" name=\"country\" onChange={handleChange} />\r\n                                    </label>\r\n\r\n                                    <label className=\"form__label\">\r\n                                        <span className=\"form__label-title\">city</span>\r\n                                        <input className=\"form__input\" type=\"text\" name=\"city\" onChange={handleChange} />\r\n                                    </label>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"form__part\">\r\n                                <div className=\"form__row\">\r\n                                    <label className=\"form__label\">\r\n                                        <span className=\"form__label-title\">description</span>\r\n                                        <textarea className=\"form__textarea\" name=\"description\" onChange={handleChange} />\r\n                                    </label>\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"form__part\">\r\n                                <div className=\"form__row\">\r\n                                    {tags.map((tag, index) => (\r\n                                        <div key={index}>{tag}</div>\r\n                                    ))}\r\n                                    <input type=\"text\" name=\"tag\" ref={tagRef} />\r\n                                    <button onClick={addTag}>добавить тэг</button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"form__footer\">\r\n                            <Button onClick={createPlace} type=\"submit\" text=\"Добавить\" />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\ntype PlacesForm = {\r\n    createPlace: any;\r\n    showForm: any;\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nimport { Place } from \"./Place\";\r\nimport { Loading } from \"../lib/Loading\";\r\nimport { useRouteMatch, useLocation } from \"react-router-dom\";\r\nimport { useHttp } from \"../../hooks/http.hook\";\r\nimport { PlacesForm } from \"./PlacesForm\";\r\nimport { PlaceType } from \"../../types/places\";\r\n\r\nconst PLACES_URL = \"/api/places\";\r\n\r\nexport const Places = (props: PlacesProps) => {\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [places, setPlaces] = useState<PlaceType[]>([]);\r\n    const [isShowForm, setIsShowForm] = useState(false);\r\n\r\n    const { url } = useRouteMatch();\r\n    const parametrs = useLocation().search;\r\n\r\n    const { loading, error, request } = useHttp();\r\n\r\n    useEffect(() => {\r\n        if (!isLoading) {\r\n            fetchPlaces();\r\n        }\r\n    }, [isLoading, places]);\r\n\r\n    const deletePlace = async (e: any, id: string) => {\r\n        e.preventDefault();\r\n\r\n        setPlaces((prev) => prev.filter((item) => item._id !== id));\r\n        const data = await request(`${PLACES_URL}/delete`, \"DELETE\", { id: id });\r\n    };\r\n\r\n    const createPlace = async (form: any, tags: string[]) => {\r\n        const dataPlace = { ...form, tags };\r\n\r\n        console.log(\"dataPlace\", dataPlace);\r\n\r\n        try {\r\n            const data = await request(`${PLACES_URL}/add`, \"POST\", dataPlace);\r\n            console.log(\"data.place\", data.place);\r\n            setPlaces((prev) => [...prev, data.place]);\r\n        } catch (error) {}\r\n    };\r\n\r\n    const fetchPlaces = async () => {\r\n        setIsLoading(true);\r\n        const data = await request(`${PLACES_URL}${parametrs && parametrs}`);\r\n        setPlaces(data);\r\n    };\r\n\r\n    const showForm = () => {\r\n        setIsShowForm(!isShowForm);\r\n        document.body.classList.toggle(\"fixed\");\r\n    };\r\n\r\n    return isLoading ? (\r\n        <React.Fragment>\r\n            <div className=\"places grid\">\r\n                {places.length > 0 &&\r\n                    places.map((item: PlaceType, index) => (\r\n                        <div key={index} className=\"grid__item\">\r\n                            <Place place={item} url={url} deletePlaceFromBd={deletePlace} />\r\n                        </div>\r\n                    ))}\r\n\r\n                <div className=\"grid__item places__add\">\r\n                    <div className=\"places__add-inner\" onClick={showForm}>\r\n                        добавить карточку\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            {isShowForm && <PlacesForm createPlace={createPlace} showForm={showForm} />}\r\n        </React.Fragment>\r\n    ) : (\r\n        <Loading value={\"places\"} />\r\n    );\r\n};\r\n\r\ntype PlacesProps = {};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useParams, Link } from \"react-router-dom\";\r\n\r\ntype PlaceType = {\r\n    name?: string;\r\n    img?: string;\r\n};\r\n\r\nexport const PlaceDetails = () => {\r\n    const [place, setPlace] = useState<PlaceType>();\r\n\r\n    const { placeId } = useParams();\r\n    console.log(placeId);\r\n\r\n    const getPlaceDetails = async () => {\r\n        await fetch(`/api/places/${placeId}`)\r\n            .then((res) => res.json())\r\n            .then((data) => {\r\n                setPlace(data);\r\n            });\r\n    };\r\n\r\n    useEffect(() => {\r\n        getPlaceDetails();\r\n    }, []);\r\n\r\n    return place ? (\r\n        <div>\r\n            <div>\r\n                <img src={place.img} alt=\"\" />\r\n            </div>\r\n            <Link to=\"/places\">назад</Link>\r\n        </div>\r\n    ) : (\r\n        <div>Load...</div>\r\n    );\r\n};\r\n","import React, { ReactNode } from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route, Redirect } from \"react-router-dom\";\r\nimport { Sidebar } from \"../sidebar/Sidebar\";\r\nimport { Places } from \"../places/Places\";\r\nimport { PlaceDetails } from \"../places/PlaceDetails\";\r\nimport { PageType } from \"../../types/app\";\r\n\r\nconst loggedIn = true;\r\n\r\nexport const App = (props: AppProps) => {\r\n    return (\r\n        <div className=\"app__inner\">\r\n            <Router>\r\n                <Sidebar />\r\n\r\n                <main className=\"main\">\r\n                    <div className=\"main__inner\">\r\n                        <Switch>\r\n                            {props.pages.map((page, index) => (\r\n                                <Route exact path={`/${page.router}`} key={index}>\r\n                                    {page.content}\r\n                                </Route>\r\n                            ))}\r\n                        </Switch>\r\n                    </div>\r\n                </main>\r\n            </Router>\r\n        </div>\r\n    );\r\n};\r\n\r\ntype AppProps = {\r\n    pages: PageType[];\r\n};\r\n\r\nApp.defaultProps = {\r\n    pages: [\r\n        {\r\n            router: \"\",\r\n            title: \"Добро пожаловать в галактику\",\r\n            content: loggedIn ? <Redirect to=\"/places\" /> : <div>12312</div>,\r\n        },\r\n        {\r\n            router: \"places\",\r\n            title: \"Места\",\r\n            content: <Places />,\r\n        },\r\n        {\r\n            router: \"places/:placeId\",\r\n            title: \"Описание места\",\r\n            content: <PlaceDetails />,\r\n        },\r\n    ],\r\n};\r\n","//style\r\nimport \"./sass/style.sass\";\r\n//react\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { App } from \"./components/app/App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"app\"));\r\n"],"sourceRoot":""}